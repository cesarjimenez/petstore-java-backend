
# CONFIGURATION USED FOR CONCORDION INTEGRATION TESTS

#
# Mongo Properties
#
mongo.host = 127.0.0.1
mongo.port = 27777
mongo.username =
mongo.password =
mongo.replica-set =
mongo.database = testdb


# The number of connections allowed per host (the pool size, per host).
mongo.connections-per-host = 8

# Multiplier for connectionsPerHost for # of threads that can block. If connectionsPerHost is 10, and threadsAllowedToBlockForConnectionMultiplier is 5, then 50 threads can block. More than that and an exception will be throw.
mongo.threads-allowed-to-block-for-connection-multiplier = 4

#  The connection timeout in milliseconds; this is for establishing the socket connections (open).
mongo.connect-timeout = 1000

#  The max wait time for a blocking thread for a connection from the pool in ms.
mongo.max-wait-time = 1500

# This controls whether the system retries automatically on connection errors.
mongo.auto-connect-retry = true

# This controls whether or not to have socket keep alive turned on (SO_KEEPALIVE).
mongo.socket-keep-alive = true

# The socket timeout; this value is passed to Socket.setSoTimeout(int).
mongo.socket-timeout = 1500

# Specifies if the driver is allowed to read from secondaries or slaves.
mongo.slave-ok = true

# If set, the w value of WriteConcern for the connection is set to this.
mongo.write-number = 1

# If set, the wtimeout value of WriteConcern for the connection is set to this. Defaults to 0.
mongo.write-timeout = 0

# Sets the fsync value of WriteConcern for the connection.
mongo.write-fsync = true

# Number of retries if an EOF exception is thrown by MongoDB driver
mongo.number.retries.on.eof = 2

# Time (in milliseconds) to wait between retries on EOF exception
mongo.delay.between.retries = 10


#
# Solr Properties
#
solr.host = localhost
solr.port = 8280
solr.context = solr
solr.username =
solr.password =
solr.core = petsservice

# Metric that can be applied to measure distances. Allowed values are "miles" and "kilometers"
solr.distance.metric = kilometers

# Generic properties
#

# Metric that can be applied to measure distances. Allowed values are "miles" and "kilometers"
distance.metric = kilometers

# Service url used to compose the url attribute of the pet object
service.url = http://localhost:8080/service/api/v1/pets/pet

#Specifies the max latitude that can be assigned to pet during the creation or update operations
limit.max-latitude=44.0

#Specifies the min latitude that can be assigned to pet during the creation or update operations
limit.min-latitude=27.0

#Specifies the max longitude that can be assigned to pet during the creation or update operations
limit.max-longitude=5.0

#Specifies the min longitude that can be assigned to pet during the creation or update operations
limit.min-longitude=-18.5

# Maximum page that can be requested
limit.max-page = 1000

# Maximum number of results per page that can be requested
limit.max-size = 1000

# Use Jamon as measurement library, if is set to false the service wont use any library
measurement.useJamon= true

# Write measurement stats to a log file
measurement.writeLogfile= true

# Maximum radius allowed (in km)
limit.max-radius = 500

# Path to log4j.properties
log4j.path= service/src/test/resources/log4j.properties

# How many threads will use the parallel implementation of the pet marshaller
parallel.pets.marshaller.number.threads = 8

